@use 'src/styles/variables' as *;

.button {
  --button-bg: var(--accent);
  --button-text: var(--accent-foreground);
  --button-border: transparent;
  --button-hover-bg: var(--accent-dark);
  --button-hover-text: var(--accent-foreground);
  --button-active-bg: var(--accent-darker);
  --button-disabled-bg: var(--bg-tertiary);
  --button-disabled-text: var(--text-disabled);
  --button-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.05);
  --button-ring: 0 0 0 3px rgba(var(--accent-rgb), 0.2);

  position: relative;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  font-weight: 500;
  text-align: center;
  white-space: nowrap;
  vertical-align: middle;
  user-select: none;
  border: 1px solid var(--button-border);
  border-radius: 0.375rem;
  background-color: var(--button-bg);
  color: var(--button-text);
  box-shadow: var(--button-shadow);
  transition: all 0.2s ease-in-out;
  cursor: pointer;
  line-height: 1.5;
  
  // Sizes
  &.size-small {
    height: 2rem;
    padding: 0 0.75rem;
    font-size: 0.8125rem;
    
    .icon {
      width: 0.875rem;
      height: 0.875rem;
    }
  }
  
  &.size-medium {
    height: 2.5rem;
    padding: 0 1rem;
    font-size: 0.9375rem;
    
    .icon {
      width: 1rem;
      height: 1rem;
    }
  }
  
  &.size-large {
    height: 3rem;
    padding: 0 1.5rem;
    font-size: 1rem;
    
    .icon {
      width: 1.125rem;
      height: 1.125rem;
    }
  }
  
  // Variants
  &.variant-primary {
    --button-bg: var(--accent);
    --button-text: var(--accent-foreground);
    --button-hover-bg: var(--accent-dark);
    --button-active-bg: var(--accent-darker);
  }
  
  &.variant-secondary {
    --button-bg: var(--bg-secondary);
    --button-text: var(--text-primary);
    --button-border: var(--border-color);
    --button-hover-bg: var(--bg-tertiary);
    --button-active-bg: var(--bg-quaternary);
    --button-shadow: none;
  }
  
  &.variant-outline {
    --button-bg: transparent;
    --button-text: var(--accent);
    --button-border: var(--accent);
    --button-hover-bg: rgba(var(--accent-rgb), 0.1);
    --button-active-bg: rgba(var(--accent-rgb), 0.2);
    --button-disabled-bg: transparent;
    --button-disabled-text: var(--text-disabled);
    --button-shadow: none;
  }
  
  &.variant-ghost {
    --button-bg: transparent;
    --button-text: var(--text-primary);
    --button-hover-bg: var(--bg-tertiary);
    --button-active-bg: var(--bg-quaternary);
    --button-shadow: none;
    
    &:hover {
      --button-text: var(--accent);
    }
  }
  
  &.variant-danger {
    --button-bg: var(--danger);
    --button-text: white;
    --button-hover-bg: var(--danger-dark);
    --button-active-bg: var(--danger-darker);
    --button-ring: 0 0 0 3px rgba(239, 68, 68, 0.3);
  }
  
  &.variant-link {
    --button-bg: transparent;
    --button-text: var(--accent);
    --button-hover-text: var(--accent-dark);
    --button-hover-bg: transparent;
    --button-active-bg: transparent;
    --button-disabled-bg: transparent;
    --button-shadow: none;
    text-decoration: underline;
    text-underline-offset: 2px;
    
    &:hover {
      text-decoration-thickness: 2px;
    }
  }
  
  // States
  &:hover {
    background-color: var(--button-hover-bg);
    color: var(--button-hover-text);
  }
  
  &:active {
    background-color: var(--button-active-bg);
  }
  
  &:focus-visible {
    outline: none;
    box-shadow: var(--button-ring);
  }
  
  &:disabled,
  &[disabled],
  &.loading {
    cursor: not-allowed;
    opacity: 0.7;
    background-color: var(--button-disabled-bg);
    color: var(--button-disabled-text);
    border-color: transparent;
    box-shadow: none;
  }
  
  // Modifiers
  &.fullWidth {
    width: 100%;
  }
  
  // Icon handling
  .icon {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    flex-shrink: 0;
    
    svg {
      width: 100%;
      height: 100%;
    }
  }
  
  .content {
    display: inline-flex;
    align-items: center;
    justify-content: center;
  }
  
  // Icon positioning
  &.hasIcon {
    &.iconLeft {
      .content {
        margin-left: 0.5rem;
      }
    }
    
    &.iconRight {
      .content {
        margin-right: 0.5rem;
      }
    }
  }
  
  // Loading state
  .loader {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: inherit;
    border-radius: inherit;
    z-index: 1;
  }
  
  .loaderIcon {
    animation: spin 0.8s linear infinite;
  }
  
  &.loading {
    .content,
    .icon:not(.loaderIcon) {
      opacity: 0;
    }
  }
}

// Animation for loading spinner
@keyframes spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}
