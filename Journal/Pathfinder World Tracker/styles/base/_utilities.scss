/**
 * Utility Classes
 * Reusable utility classes for common styling needs
 */

// Display utilities
.d-none { display: none !important; }
.d-inline { display: inline !important; }
.d-inline-block { display: inline-block !important; }
.d-block { display: block !important; }
.d-flex { display: flex !important; }
.d-inline-flex { display: inline-flex !important; }
.d-grid { display: grid !important; }
.d-table { display: table !important; }
.d-table-row { display: table-row !important; }
.d-table-cell { display: table-cell !important; }

// Flex utilities
.flex-row { flex-direction: row !important; }
.flex-column { flex-direction: column !important; }
.flex-row-reverse { flex-direction: row-reverse !important; }
.flex-column-reverse { flex-direction: column-reverse !important; }

.flex-wrap { flex-wrap: wrap !important; }
.flex-nowrap { flex-wrap: nowrap !important; }
.flex-wrap-reverse { flex-wrap: wrap-reverse !important; }

.justify-content-start { justify-content: flex-start !important; }
.justify-content-end { justify-content: flex-end !important; }
.justify-content-center { justify-content: center !important; }
.justify-content-between { justify-content: space-between !important; }
.justify-content-around { justify-content: space-around !important; }
.justify-content-evenly { justify-content: space-evenly !important; }

.align-items-start { align-items: flex-start !important; }
.align-items-end { align-items: flex-end !important; }
.align-items-center { align-items: center !important; }
.align-items-baseline { align-items: baseline !important; }
.align-items-stretch { align-items: stretch !important; }

.align-content-start { align-content: flex-start !important; }
.align-content-end { align-content: flex-end !important; }
.align-content-center { align-content: center !important; }
.align-content-between { align-content: space-between !important; }
.align-content-around { align-content: space-around !important; }
.align-content-stretch { align-content: stretch !important; }

.align-self-auto { align-self: auto !important; }
.align-self-start { align-self: flex-start !important; }
.align-self-end { align-self: flex-end !important; }
.align-self-center { align-self: center !important; }
.align-self-baseline { align-self: baseline !important; }
.align-self-stretch { align-self: stretch !important; }

.flex-fill { flex: 1 1 auto !important; }
.flex-grow-0 { flex-grow: 0 !important; }
.flex-grow-1 { flex-grow: 1 !important; }
.flex-shrink-0 { flex-shrink: 0 !important; }
.flex-shrink-1 { flex-shrink: 1 !important; }

// Spacing utilities
@each $spacer, $value in $spacers {
  // Margin utilities
  .m-#{$spacer} { margin: $value !important; }
  .mt-#{$spacer},
  .my-#{$spacer} {
    margin-top: $value !important;
  }
  .me-#{$spacer},
  .mx-#{$spacer} {
    margin-right: $value !important;
  }
  .mb-#{$spacer},
  .my-#{$spacer} {
    margin-bottom: $value !important;
  }
  .ms-#{$spacer},
  .mx-#{$spacer} {
    margin-left: $value !important;
  }

  // Negative margin utilities
  .m-n#{$spacer} { margin: -$value !important; }
  .mt-n#{$spacer},
  .my-n#{$spacer} {
    margin-top: -$value !important;
  }
  .me-n#{$spacer},
  .mx-n#{$spacer} {
    margin-right: -$value !important;
  }
  .mb-n#{$spacer},
  .my-n#{$spacer} {
    margin-bottom: -$value !important;
  }
  .ms-n#{$spacer},
  .mx-n#{$spacer} {
    margin-left: -$value !important;
  }

  // Padding utilities
  .p-#{$spacer} { padding: $value !important; }
  .pt-#{$spacer},
  .py-#{$spacer} {
    padding-top: $value !important;
  }
  .pe-#{$spacer},
  .px-#{$spacer} {
    padding-right: $value !important;
  }
  .pb-#{$spacer},
  .py-#{$spacer} {
    padding-bottom: $value !important;
  }
  .ps-#{$spacer},
  .px-#{$spacer} {
    padding-left: $value !important;
  }
}

// Sizing utilities
.w-25 { width: 25% !important; }
.w-50 { width: 50% !important; }
.w-75 { width: 75% !important; }
.w-100 { width: 100% !important; }
.w-auto { width: auto !important; }

.h-25 { height: 25% !important; }
.h-50 { height: 50% !important; }
.h-75 { height: 75% !important; }
.h-100 { height: 100% !important; }
.h-auto { height: auto !important; }

.mw-100 { max-width: 100% !important; }
.mh-100 { max-height: 100% !important; }

.vw-100 { width: 100vw !important; }
.vh-100 { height: 100vh !important; }

.min-vw-100 { min-width: 100vw !important; }
.min-vh-100 { min-height: 100vh !important; }

// Border utilities
.border {
  border: 1px solid var(--border-color) !important;
}
.border-top {
  border-top: 1px solid var(--border-color) !important;
}
.border-end {
  border-right: 1px solid var(--border-color) !important;
}
.border-bottom {
  border-bottom: 1px solid var(--border-color) !important;
}
.border-start {
  border-left: 1px solid var(--border-color) !important;
}

.border-0 { border: 0 !important; }
.border-top-0 { border-top: 0 !important; }
.border-end-0 { border-right: 0 !important; }
.border-bottom-0 { border-bottom: 0 !important; }
.border-start-0 { border-left: 0 !important; }

.border-primary { border-color: var(--primary) !important; }
.border-secondary { border-color: var(--gray-600) !important; }
.border-success { border-color: var(--success) !important; }
.border-info { border-color: var(--info) !important; }
.border-warning { border-color: var(--warning) !important; }
.border-danger { border-color: var(--danger) !important; }
.border-light { border-color: var(--gray-100) !important; }
.border-dark { border-color: var(--gray-900) !important; }
.border-white { border-color: var(--white) !important; }

.rounded { border-radius: var(--border-radius) !important; }
.rounded-top { border-top-left-radius: var(--border-radius) !important; border-top-right-radius: var(--border-radius) !important; }
.rounded-end { border-top-right-radius: var(--border-radius) !important; border-bottom-right-radius: var(--border-radius) !important; }
.rounded-bottom { border-bottom-right-radius: var(--border-radius) !important; border-bottom-left-radius: var(--border-radius) !important; }
.rounded-start { border-top-left-radius: var(--border-radius) !important; border-bottom-left-radius: var(--border-radius) !important; }

.rounded-circle { border-radius: 50% !important; }
.rounded-pill { border-radius: 50rem !important; }
.rounded-0 { border-radius: 0 !important; }

// Shadow utilities
.shadow-sm { box-shadow: var(--shadow-sm) !important; }
.shadow { box-shadow: var(--shadow) !important; }
.shadow-lg { box-shadow: var(--shadow-lg) !important; }
.shadow-none { box-shadow: none !important; }

// Visibility utilities
.visible { visibility: visible !important; }
.invisible { visibility: hidden !important; }

// Overflow utilities
.overflow-auto { overflow: auto !important; }
.overflow-hidden { overflow: hidden !important; }
.overflow-visible { overflow: visible !important; }
.overflow-scroll { overflow: scroll !important; }

// Position utilities
.position-static { position: static !important; }
.position-relative { position: relative !important; }
.position-absolute { position: absolute !important; }
.position-fixed { position: fixed !important; }
.position-sticky { position: sticky !important; }

// Screen reader utilities
.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

.sr-only-focusable:not(:focus):not(:focus-within) {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

// Cursor utilities
.cursor-pointer { cursor: pointer !important; }
.cursor-default { cursor: default !important; }
.cursor-move { cursor: move !important; }
.cursor-not-allowed { cursor: not-allowed !important; }
.cursor-zoom-in { cursor: zoom-in !important; }
.cursor-zoom-out { cursor: zoom-out !important; }

// User select utilities
.user-select-all { user-select: all !important; }
.user-select-auto { user-select: auto !important; }
.user-select-none { user-select: none !important; }

// Pointer events utilities
.pe-none { pointer-events: none !important; }
.pe-auto { pointer-events: auto !important; }

// Object fit utilities
.object-fit-contain { object-fit: contain !important; }
.object-fit-cover { object-fit: cover !important; }
.object-fit-fill { object-fit: fill !important; }
.object-fit-scale { object-fit: scale-down !important; }
.object-fit-none { object-fit: none !important; }
