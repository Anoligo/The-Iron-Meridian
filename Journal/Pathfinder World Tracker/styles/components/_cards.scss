// Import variables and color functions at the top of the file
@use 'sass:color';
@use '../variables' as vars;

/**
 * Cards
 * Flexible container for displaying content with optional header and footer
 */

.card {
  position: relative;
  display: flex;
  flex-direction: column;
  min-width: 0;
  height: 100%;
  word-wrap: break-word;
  background-color: var(--card-bg);
  background-clip: border-box;
  border: 1px solid var(--card-border-color);
  border-radius: var(--border-radius);
  box-shadow: var(--shadow-sm);
  transition: box-shadow 0.2s ease, transform 0.2s ease;
  
  &:hover {
    box-shadow: var(--shadow);
    transform: translateY(-2px);
  }
  
  // Card link wrapper
  > a {
    color: inherit;
    text-decoration: none;
    
    &:hover {
      color: inherit;
      text-decoration: none;
    }
  }
}

// Card image
.card-img {
  width: 100%;
  border-top-left-radius: calc(var(--border-radius) - 1px);
  border-top-right-radius: calc(var(--border-radius) - 1px);
  
  // Top and bottom image
  &.img-top {
    border-top-left-radius: calc(var(--border-radius) - 1px);
    border-top-right-radius: calc(var(--border-radius) - 1px);
    border-bottom-left-radius: 0;
    border-bottom-right-radius: 0;
  }
  
  &.img-bottom {
    border-top-left-radius: 0;
    border-top-right-radius: 0;
    border-bottom-left-radius: calc(var(--border-radius) - 1px);
    border-bottom-right-radius: calc(var(--border-radius) - 1px);
  }
}

// Card image overlay
.card-img-overlay {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  padding: 1.25rem;
  border-radius: calc(var(--border-radius) - 1px);
  background: linear-gradient(to bottom, rgba(0, 0, 0, 0) 0%, rgba(0, 0, 0, 0.7) 100%);
  display: flex;
  flex-direction: column;
  justify-content: flex-end;
  color: #fff;
  
  .card-title,
  .card-text {
    color: inherit;
  }
}

// Card body
.card-body {
  flex: 1 1 auto;
  padding: 1.25rem;
  
  // Remove top margin for first child
  > :first-child {
    margin-top: 0;
  }
  
  // Remove bottom margin for last child
  > :last-child {
    margin-bottom: 0;
  }
}

// Card title and subtitle
.card-title {
  margin-bottom: 0.75rem;
  font-size: 1.25rem;
  font-weight: 500;
  color: var(--text);
  
  + .card-subtitle {
    margin-top: -0.375rem;
  }
}

.card-subtitle {
  margin-top: -0.25rem;
  margin-bottom: 0.5rem;
  font-size: 0.875rem;
  color: var(--text-muted);
}

// Card text
.card-text {
  margin-bottom: 1rem;
  color: var(--text);
  
  &:last-child {
    margin-bottom: 0;
  }
}

// Card links
.card-link {
  margin-right: 1rem;
  color: var(--primary);
  text-decoration: none;
  
  &:hover {
    color: var(--primary-dark);
    text-decoration: underline;
  }
  
  &:last-child {
    margin-right: 0;
  }
}

// Card header and footer
.card-header,
.card-footer {
  padding: 0.75rem 1.25rem;
  background-color: var(--card-cap-bg);
  border-bottom: 1px solid var(--card-border-color);
  
  &:first-child {
    border-top-left-radius: calc(var(--border-radius) - 1px);
    border-top-right-radius: calc(var(--border-radius) - 1px);
  }
  
  &:last-child {
    border-bottom-left-radius: calc(var(--border-radius) - 1px);
    border-bottom-right-radius: calc(var(--border-radius) - 1px);
  }
}

.card-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  
  + .list-group .list-group-item:first-child {
    border-top: 0;
  }
}

.card-footer {
  border-top: 1px solid var(--card-border-color);
  background-color: var(--card-cap-bg);
  
  .btn-link {
    padding: 0;
  }
}

// Card groups
.card-group {
  display: flex;
  flex-direction: column;
  
  .card {
    margin-bottom: 1rem;
  }
  
  @include media-breakpoint-up(md) {
    flex-flow: row wrap;
    margin-right: -0.5rem;
    margin-left: -0.5rem;
    
    > .card {
      flex: 1 0 0%;
      margin-bottom: 0;
      margin-right: 0.5rem;
      margin-left: 0.5rem;
      
      + .card {
        margin-left: 0;
      }
      
      &:not(:last-child) {
        border-top-right-radius: 0;
        border-bottom-right-radius: 0;
        
        .card-img-top,
        .card-header {
          border-top-right-radius: 0;
        }
        
        .card-img-bottom,
        .card-footer {
          border-bottom-right-radius: 0;
        }
      }
      
      &:not(:first-child) {
        border-top-left-radius: 0;
        border-bottom-left-radius: 0;
        
        .card-img-top,
        .card-header {
          border-top-left-radius: 0;
        }
        
        .card-img-bottom,
        .card-footer {
          border-bottom-left-radius: 0;
        }
      }
    }
  }
}

// Card decks
.card-deck {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
  grid-gap: 1rem;
  
  .card {
    margin-bottom: 0;
  }
}

// Card columns
.card-columns {
  column-count: 3;
  column-gap: 1.25rem;
  orphans: 1;
  widows: 1;
  
  .card {
    display: inline-block;
    width: 100%;
    margin-bottom: 1.25rem;
  }
  
  @include media-breakpoint-down(lg) {
    column-count: 2;
  }
  
  @include media-breakpoint-down(md) {
    column-count: 1;
  }
}

// Card variants
@mixin card-variant($background, $border, $color) {
  background-color: $background;
  border-color: $border;
  
  .card-header,
  .card-footer {
    $r: color.channel($color, 'red', rgb);
    $g: color.channel($color, 'green', rgb);
    $b: color.channel($color, 'blue', rgb);
    background-color: rgba($r, $g, $b, 0.1);
    border-color: $border;
  }
  
  .card-title,
  .card-text,
  .card-link {
    color: $color;
  }
  
  .card-link {
    &:hover {
      color: color.scale($color, $lightness: -10%);
    }
  }
}

// Contextual card variants
.card-primary {
  @include card-variant(
    rgba(color.channel(vars.$primary, 'red', rgb), color.channel(vars.$primary, 'green', rgb), color.channel(vars.$primary, 'blue', rgb), 0.1),
    vars.$primary,
    vars.$primary
  );
}

.card-secondary {
  @include card-variant(
    rgba(color.channel(vars.$secondary, 'red', rgb), color.channel(vars.$secondary, 'green', rgb), color.channel(vars.$secondary, 'blue', rgb), 0.1),
    vars.$secondary,
    vars.$secondary
  );
}

.card-success {
  @include card-variant(
    rgba(color.channel(vars.$success, 'red', rgb), color.channel(vars.$success, 'green', rgb), color.channel(vars.$success, 'blue', rgb), 0.1),
    vars.$success,
    vars.$success
  );
}

.card-info {
  @include card-variant(
    rgba(color.channel(vars.$info, 'red', rgb), color.channel(vars.$info, 'green', rgb), color.channel(vars.$info, 'blue', rgb), 0.1),
    vars.$info,
    vars.$info
  );
}

.card-warning {
  @include card-variant(
    rgba(color.channel(vars.$warning, 'red', rgb), color.channel(vars.$warning, 'green', rgb), color.channel(vars.$warning, 'blue', rgb), 0.1),
    vars.$warning,
    vars.$warning
  );
}

.card-danger {
  @include card-variant(
    rgba(color.channel(vars.$danger, 'red', rgb), color.channel(vars.$danger, 'green', rgb), color.channel(vars.$danger, 'blue', rgb), 0.1),
    vars.$danger,
    vars.$danger
  );
}

.card-light {
  @include card-variant(
    rgba(color.channel(vars.$light, 'red', rgb), color.channel(vars.$light, 'green', rgb), color.channel(vars.$light, 'blue', rgb), 0.1),
    vars.$light,
    vars.$light
  );
}

.card-dark {
  @include card-variant(
    rgba(color.channel(vars.$dark, 'red', rgb), color.channel(vars.$dark, 'green', rgb), color.channel(vars.$dark, 'blue', rgb), 0.1),
    vars.$dark,
    vars.$dark
  );
}

// Card with hover effect
.card-hover {
  transition: transform 0.2s ease, box-shadow 0.2s ease;
  
  &:hover {
    transform: translateY(-4px);
    box-shadow: 0 0.5rem 1.5rem rgba(0, 0, 0, 0.15) !important;
  }
}

// Card with border accent
.card-accent {
  border-top: 3px solid var(--accent);
  
  &.card-primary {
    border-top-color: var(--primary);
  }
  
  &.card-success {
    border-top-color: var(--success);
  }
  
  &.card-info {
    border-top-color: var(--info);
  }
  
  &.card-warning {
    border-top-color: var(--warning);
  }
  
  &.card-danger {
    border-top-color: var(--danger);
  }
}

// Card with shadow
.card-shadow {
  box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
  
  &-sm {
    box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
  }
  
  &-lg {
    box-shadow: 0 1rem 3rem rgba(0, 0, 0, 0.175);
  }
}

// Card with no shadow
.card-no-shadow {
  box-shadow: none;
}

// Card with no border
.card-no-border {
  border: none;
}

// Card with transparent background
.card-transparent {
  background-color: transparent;
  border-color: transparent;
}

// Card with hover overlay
.card-hover-overlay {
  position: relative;
  overflow: hidden;
  
  .card-img-overlay {
    opacity: 0;
    transition: opacity 0.3s ease;
    background: rgba(0, 0, 0, 0.7);
    display: flex;
    align-items: center;
    justify-content: center;
  }
  
  &:hover .card-img-overlay {
    opacity: 1;
  }
}

// Card with action buttons on hover
.card-hover-actions {
  .card-actions {
    position: absolute;
    top: 0.5rem;
    right: 0.5rem;
    opacity: 0;
    transition: opacity 0.2s ease;
    z-index: 2;
    
    .btn {
      margin-left: 0.25rem;
      width: 2rem;
      height: 2rem;
      padding: 0;
      display: inline-flex;
      align-items: center;
      justify-content: center;
      border-radius: 50%;
      background-color: rgba(0, 0, 0, 0.5);
      color: #fff;
      border: none;
      
      &:hover {
        background-color: rgba(0, 0, 0, 0.7);
      }
    }
  }
  
  &:hover .card-actions {
    opacity: 1;
  }
}
