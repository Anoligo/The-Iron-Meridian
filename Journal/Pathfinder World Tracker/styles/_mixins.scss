/**
 * SCSS Mixins
 * Reusable mixins for common styling patterns
 */

// Media query mixin for min-width
@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {
  $min: map-get($breakpoints, $name);
  @if $min {
    @media (min-width: $min) {
      @content;
    }
  } @else {
    @content;
  }
}

// Media query mixin for max-width
@mixin media-breakpoint-down($name, $breakpoints: $grid-breakpoints) {
  $max: map-get($breakpoints, $name);
  @if $max {
    @media (max-width: ($max - 0.02)) {
      @content;
    }
  } @else {
    @content;
  }
}

// Media query mixin for min and max width
@mixin media-breakpoint-between($lower, $upper, $breakpoints: $grid-breakpoints) {
  $min: map-get($breakpoints, $lower);
  $max: map-get($breakpoints, $upper);
  @if $min != null and $max != null {
    @media (min-width: $min) and (max-width: ($max - 0.02)) {
      @content;
    }
  } @else if $min == null {
    @include media-breakpoint-down($upper, $breakpoints) {
      @content;
    }
  } @else if $max == null {
    @include media-breakpoint-up($lower, $breakpoints) {
      @content;
    }
  }
}

// Text overflow with ellipsis
@mixin text-truncate() {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

// Clearfix
@mixin clearfix() {
  &::after {
    display: block;
    content: "";
    clear: both;
  }
}

// Visually hidden (for screen readers)
@mixin sr-only() {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

// Reset button styles
@mixin button-reset() {
  appearance: none;
  background: none;
  border: 0;
  padding: 0;
  margin: 0;
  font: inherit;
  color: inherit;
  cursor: pointer;
  text-align: left;
  text-decoration: none;
  user-select: none;
  -webkit-user-drag: none;
  -webkit-tap-highlight-color: transparent;
}

// Focus styles
@mixin focus-styles($color: var(--accent), $offset: 2px) {
  outline: none;
  
  &:focus-visible {
    outline: 2px solid $color;
    outline-offset: $offset;
  }
}

// Scrollbar styles
@mixin custom-scrollbar($width: 8px, $track-color: var(--border-color), $thumb-color: var(--text-muted)) {
  &::-webkit-scrollbar {
    width: $width;
    height: $width;
  }
  
  &::-webkit-scrollbar-track {
    background: $track-color;
    border-radius: $width / 2;
  }
  
  &::-webkit-scrollbar-thumb {
    background: $thumb-color;
    border-radius: $width / 2;
    
    &:hover {
      background: darken($thumb-color, 10%);
    }
  }
  
  // Firefox
  scrollbar-width: thin;
  scrollbar-color: $thumb-color $track-color;
}

// Truncate text to a specific number of lines
@mixin line-clamp($lines: 2) {
  display: -webkit-box;
  -webkit-line-clamp: $lines;
  -webkit-box-orient: vertical;
  overflow: hidden;
  text-overflow: ellipsis;
}

// Aspect ratio box
@mixin aspect-ratio($width, $height) {
  position: relative;
  overflow: hidden;
  
  &::before {
    content: "";
    display: block;
    width: 100%;
    padding-top: ($height / $width) * 100%;
  }
  
  > * {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }
}

// Gradient text
@mixin text-gradient($gradient) {
  background: $gradient;
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
  text-fill-color: transparent;
}

// Smooth scrolling
@mixin smooth-scrolling() {
  -webkit-overflow-scrolling: touch;
  scroll-behavior: smooth;
  
  @media (prefers-reduced-motion: reduce) {
    scroll-behavior: auto;
  }
}

// Print styles
@mixin print() {
  @media print {
    @content;
  }
}

// Dark mode
@mixin dark-mode() {
  @media (prefers-color-scheme: dark) {
    @content;
  }
}

// High contrast mode
@mixin high-contrast() {
  @media (prefers-contrast: more) {
    @content;
  }
}

// Reduced motion
@mixin reduced-motion() {
  @media (prefers-reduced-motion: reduce) {
    @content;
  }
}

// Animation keyframes
@mixin keyframes($name) {
  @keyframes #{$name} {
    @content;
  }
}

// Placeholder text
@mixin placeholder($color: var(--text-muted)) {
  &::placeholder {
    color: $color;
    opacity: 1;
  }
  
  &::-webkit-input-placeholder {
    color: $color;
    opacity: 1;
  }
  
  &:-ms-input-placeholder {
    color: $color;
    opacity: 1;
  }
  
  &::-ms-input-placeholder {
    color: $color;
    opacity: 1;
  }
}
